GTimer v2.0.0
Copyright (C) 1998 Craig Knudsen, craig@kn5.is
http://www.k5n.us/gtimer.php

BUILD REQUIREMENTS:
--------------------------------------------------------------------------
GTK 2.8 or later

It should build without issue on any UN*X that has GTK.  It should also
build on Windows machines that have the Windows port of GTK.  I have
also compiled it on Mac OS X and it works great, but you do need to
install X11 (from apple) and GTK.




COMPILING:
--------------------------------------------------------------------------
Use the following sequence of commands to build:

./configure
make

If you are monkeying around with the source and automake stuff, you may
use the following commands to update the configure script.  (This is
not needed for the vast majority of source code changes.)

aclocal
automake --add-missing
autoconf

For more source code build documentation, see the INSTALL file.


RUNNING:
--------------------------------------------------------------------------
To run:
	./gtimer


NEW RELEASES:
--------------------------------------------------------------------------
To check for new releases, try the "Tools->Check for New Version" item
in the menu.

USING:
--------------------------------------------------------------------------
Command line options:
-midnight N	If you work past midnight, then use this to keep hours up
		until N count toward the previous day.
		Example:
		  -midnight 400
		  All hours up until 4AM will be applied to previous day.
-nosplash	Do not show the splash screen on app startup.
-start taskname	Start timing the specified task
-resume		Start timing the same tasks that were on when the application
		last exited.
-version	Display the gtimer version
-help		Get help on usage


TO DO:
--------------------------------------------------------------------------
- Catch some signals (SIGINT, for example) so we can save date before
  exiting.  GIMP does this, so it should be possible.
- Show the GNU license on initial run of the app.
- Online help.
- Postscript output for printing rather than plain text.
- Make a smaller main window (like gtcd)
- Optionally store data in MySQL, Oracle, etc. instead of flat files
- Add a configuration window to set things like print command,
  idle timeout, etc.
- Export function (tab-delimited text file)
- Ability to edit existing annotations



HISTORY:
--------------------------------------------------------------------------
See ChangeLog for development history.


TRANSLATING
--------------------------------------------------------------------------
create messages.po[t]:

$xgettext *.c

create <lang>.po:

$msginit

create <lang>.mo

$msgfmt -o <lang>.mo <lang>.po

Merge new texts:

$msgmerge -U <lang>.po messages.po[t]

